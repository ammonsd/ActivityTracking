# Application Properties for AWS Deployment
# OVERRIDES ONLY - All other settings inherited from application.properties
#
# Activate with: SPRING_PROFILES_ACTIVE=aws

# ===================================================================
# AWS-SPECIFIC OVERRIDES
# ===================================================================

# Server Configuration
# Port 8080 (default) - Accessed via Cloudflare Tunnel for HTTPS
# server.port=8080

# Database Configuration
# Database credentials are loaded from AWS Secrets Manager via SecretsEnvironmentPostProcessor
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/AmmoP1DB}

# Hibernate Configuration - VALIDATE ONLY (do not modify schema in production!)
# CRITICAL: Use ddl-auto=validate to prevent data loss from schema changes
spring.jpa.hibernate.ddl-auto=validate
# Note: NOT setting hibernate.jdbc.time_zone because we handle UTC in Java code with LocalDateTime.now(ZoneOffset.UTC)

# Disable SQL initialization in AWS (use Hibernate instead)
spring.sql.init.mode=never

# Defer datasource initialization until after EntityManager is ready
spring.jpa.defer-datasource-initialization=false

# Connection Pool Optimization for AWS RDS
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.leak-detection-threshold=60000

# CORS Configuration - Override via environment variable
# Example: CORS_ALLOWED_ORIGINS=https://yourdomain.com,https://www.yourdomain.com
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:4200,http://localhost:3000}

# Logging Configuration - CloudWatch-compatible
logging.level.root=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# Actuator/Health Check Configuration - Required for AWS ALB
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# AWS Secrets Manager Configuration
# Set these environment variables before deployment:
# - AWS_SECRET_NAME (default: taskactivity/database/credentials)
# - AWS_REGION (default: us-east-1)
# These are read by SecretsEnvironmentPostProcessor

# Admin User Configuration
# Set these environment variables to override defaults:
# - ADMIN_USERNAME (default: admin)
# - ADMIN_PASSWORD (default: ChangeMe123!)

# ===================================================================
# SWAGGER/OPENAPI CONFIGURATION FOR AWS
# ===================================================================
# OpenAPI/Swagger is ENABLED for AWS deployments to allow API testing
# Access via: https://your-domain.com/swagger-ui.html
# 
# SECURITY NOTE: Swagger UI is publicly accessible but actual API endpoints
# still require authentication. Consider restricting access in production:
# - Option 1: Set springdoc.swagger-ui.enabled=false to disable completely
# - Option 2: Require ADMIN role by modifying SecurityConfig.java
# - Option 3: Use CloudFlare Access or AWS WAF to restrict by IP/authentication
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true

# For stricter security, uncomment to disable Swagger in production:
# springdoc.swagger-ui.enabled=false
# springdoc.api-docs.enabled=false

